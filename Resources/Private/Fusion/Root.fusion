include: Component/**/*

prototype(Neos.Neos:Page) {
    head.betterEmbedCss = Neos.Fusion:Component {
        @position = 'end'
        includeAssets = ${q(documentNode).children('[instanceof Neos.Neos:ContentCollection]').find('[instanceof BetterEmbed.NeosEmbed:Mixin.Include]').is() || q(documentNode).is('[instanceof BetterEmbed.NeosEmbed:Mixin.Include]')}

        renderer = afx`
            <link rel='stylesheet' @if.set={props.includeAssets}>
                <Neos.Fusion:ResourceUri @path='attributes.href' path='resource://BetterEmbed.NeosEmbed/Public/css/defaultStyle.css' />
            </link>
            <link rel='stylesheet' @if.inBackend={node.context.inBackend}>
                <Neos.Fusion:ResourceUri @path='attributes.href' path='resource://BetterEmbed.NeosEmbed/Public/css/embed.css' />
            </link>
            <script type='text/javascript' defer @if.set={props.includeAssets}>
                <Neos.Fusion:ResourceUri @path='attributes.src' path='resource://BetterEmbed.NeosEmbed/Public/js/embed.js' />
            </script>
        `
    }
}

prototype(BetterEmbed.NeosEmbed:Item) < prototype(Neos.Neos:ContentComponent) {

    recordNode              = ${q(node).property('record')}

    identifier              = ${'embed-form-' + q(node).property('_identifier')}
    titel                   = ${q(this.recordNode).property('title')}
    url                     = ${q(this.recordNode).property('url')}
    thumbnail               = ${q(this.recordNode).property('thumbnail')}
    thumbnailUrl            = ${q(this.recordNode).property('thumbnailUrl')}
    thumbnailContentType    = ${q(this.recordNode).property('thumbnailContentType')}
    thumbnailContent        = ${q(this.recordNode).property('thumbnailContent')}
    embedHtml               = ${q(this.recordNode).property('embedHtml')}
    body                    = ${q(this.recordNode).property('body')}
    datePublished           = ${q(this.recordNode).property('publishedAt')}
    authorName              = ${q(this.recordNode).property('authorName')}
    authorImage             = ${q(this.recordNode).property('authorImage')}
    authorUrl               = ${q(this.recordNode).property('authorUrl')}
    itemType                = ${q(this.recordNode).property('itemType')}

    @if.hasRecordOrInBackend = ${this.recordNode || node.context.inBackend}

    renderer = afx`
        <BetterEmbed.NeosEmbed:ComponentRenderer @if.set={props.recordNode} />
        <div class="better-embed-placeholder" @if.notSet={!props.recordNode}>
            <div class="heading">Please set a url in the inspector panel</div>
        </div>
    `

    @cache {
        mode = 'cached'
        entryIdentifier {
            node = ${node}
        }
        entryTags {
            1 = ${Neos.Caching.nodeTag(node)}
            2 = ${Neos.Caching.nodeTypeTag('BetterEmbed.NeosEmbed:Record', node)}
        }
    }
}

prototype(BetterEmbed.NeosEmbed:ComponentRenderer) < prototype(Neos.Fusion:Case) {
    default {
        condition = true
        renderer = BetterEmbed.NeosEmbed:Component.Default {
            @apply.props = ${props}
        }
    }
}


